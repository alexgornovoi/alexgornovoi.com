---
import "../../styles/global.css";
import Tools from "@components/Tools.astro";
import Header from "@components/Header.astro";
import { getCollection } from "astro:content";
import { makeSvgComponent } from "astro/assets/utils";

const blogs_collection = await getCollection("blog");
const projects_collection = await getCollection("project");

const blogs = blogs_collection.map((blog) => blog["data"]);
const project_map = {};

projects_collection.forEach(
  (project) => (project_map[project.id] = project.data),
);

function convertDate(date) {
  const formattedDate = date.toLocaleDateString("en-US", {
    month: "short",
    day: "2-digit",
    year: "numeric",
  });

  return formattedDate;
}
---

<html>
  <head>
    <meta charset="utf-8" />
  </head>
  <body>
    <Header />
    <main class="mt-[calc(50px+1.25rem)] p-5">
      <div class="grid grid-cols-1 gap-6">
        {
          blogs.map(
            (
              { title, pubDate, project, tools, id, description },
              blogIndex,
            ) => (
              <div class="flex w-full justify-center">
                <div
                  class="content flex flex-col p-3 px-5 opacity-0 animate-fade-in-down rounded-lg h-[130px] w-3/4 glow-effect cursor-pointer"
                  style={`animation-delay: ${blogIndex * 200}ms;`}
                  data-link={id}
                >
                  <div class="flex items-center justify-between">
                    <p class="font-bold">{title}</p>
                    <p class="text-sm">{convertDate(pubDate)}</p>
                  </div>

                  <div class="max-h-[4.5rem] overflow-hidden">
                    <p class="text-sm mt-2 flex-grow text-ellipsis line-clamp-2">
                      {description}
                    </p>
                  </div>

                  <div class="flex items-center justify-between mt-auto">
                    {project != undefined && (
                      <p class="text-xs flex">
                        Related Project: {project_map[project].title}
                      </p>
                    )}
                    <div class="flex justify-end">
                      <Tools tools={tools} maxWidth={3} />
                    </div>
                  </div>
                </div>
              </div>
            ),
          )
        }
      </div>
    </main>
  </body>
</html>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const blogDivs = document.querySelectorAll(".content");

    blogDivs.forEach((blogDiv) => {
      blogDiv.addEventListener("click", () => {
        console.log("clicked");
        const blogLink = blogDiv.getAttribute("data-link");
        window.location.href = "blog/" + blogLink;
      });
    });
  });
</script>
